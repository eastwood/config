" Vim 8 configuration file

" Install packages
call plug#begin()
Plug 'tpope/vim-sensible' " Smart defaults
Plug 'tpope/vim-fugitive' " Git badassery
Plug 'tpope/vim-surround' " The Pope's gift to man
Plug 'scrooloose/nerdcommenter' " Comment lines
Plug 'scrooloose/nerdtree' " File tree
Plug 'pangloss/vim-javascript' " Javascript support
Plug 'mxw/vim-jsx' " JSX support
Plug 'ternjs/tern_for_vim' " Javascript autocomplete
Plug 'ajh17/VimCompletesMe' " Lightweight tab completion
Plug 'w0rp/ale' " Linting engine
Plug 'altercation/vim-colors-solarized' " Solar powered colorschemes
Plug 'rakr/vim-one'
Plug 'kien/ctrlp.vim'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets' " Snippets
call plug#end()

set nocompatible
let mapleader = " "

set clipboard=unnamed " system clipboard
set clipboard=unnamed " system clipboard

set completeopt=menu,preview,longest
set backspace=2
set ttyfast
set modelines=0
set history=500
set autoread
set showmatch
set splitbelow splitright

set statusline=%<\ %F%=\ %{ALEGetStatusLine()}\ \|\ %{&fileformat}\ \|\ %{&fileencoding}\ \|\ %{&filetype}\ \|\ %p%%\ \|\ LN\ %l:%c\ 
" Fonts and Colours
set guifont=Source\ Code\ Pro:h12
let &t_8f = "\<Esc>[38:2:%lu:%lu:%lum"
let &t_8b = "\<Esc>[48:2:%lu:%lu:%lum"
set mouse=a
" 100 characters wide column
set colorcolumn=100
" User Interface
colorscheme solarized
set bg=dark
if has("gui_running")
  set guioptions-=m " no menu
  set guioptions-=T " no toolbar
  set guioptions-=r " no scrollbar on the right
  set guioptions-=L " no scrollbar on the right
  set guioptions-=b " no scrollbar on the bottom
endif

set title
set number
set cursorline
set showcmd
set hidden
set showmode

" Files and Backups
set noswapfile
set backupdir=~/tmp,/tmp
set undodir=~/.vim/.tmp,~/tmp,~/.tmp,/tmp
set wildignore=.svn,CVS,.git,*.swp,*.jpg,*.png,*.gif,*.pdf,*.bak
set suffixes+=.old
set undofile

" Text Formatting
set smartcase
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set ignorecase
set hlsearch
set nowrap

" Keybindings

  " General Keybindings
  map <leader><leader> :
  imap jk <ESC>
  nnoremap <backspace> <C-^>
  nnoremap ` '
  nnoremap ' `
  imap <C-s> <C-o>:w!<CR>
  imap <C-v> <ESC>"+gP
  vmap <C-c> "+y
  nnoremap / /\v
  map \ :NERDTreeToggle<cr>

  " Menu settings
  inoremap <expr><Esc>      pumvisible() ? "\<C-e>" : "\<Esc>"
  inoremap <expr><CR>       pumvisible() ? "\<C-y>" : "\<CR>"
  inoremap <expr><C-j>      pumvisible() ? "\<C-n>" : "\<C-j>"
  inoremap <expr><C-k>      pumvisible() ? "\<C-p>" : "\<C-k>"
  autocmd CompleteDone * pclose

  " Project management
  nmap <leader>pf :CtrlP<CR>
  nmap <leader>ft :NERDTreeFind<cr>
  nmap <leader>pt :NERDTreeCWD<cr>
  nmap <leader>pp :source ~/Dropbox/sessions/
  nmap <leader>ps :mksession! ~/Dropbox/sessions/
  
  " Git/Fugitive keybindings
  nnoremap <leader>gs :Gstatus<cr>
  nnoremap <leader>gf :Gfetch<cr>
  nnoremap <leader>gF :!git pull --rebase<cr>
  nnoremap <leader>gP :Gpush
  nnoremap <leader>gc :Gcommit<cr>
  nnoremap <leader>gC :Git checkout


  " Window bindings
  nnoremap <leader>wh <C-w>h
  nnoremap <leader>wj <C-w>j
  nnoremap <leader>wk <C-w>k
  nnoremap <leader>wl <C-w>l
  nnoremap <leader>wo <C-w>o
  nnoremap <leader>wc <C-w>c
  nnoremap <leader>ws <C-w>s
  nnoremap <leader>wv <C-w>v

  " Buffer bindings
  nmap <leader>bd :bp<bar>sp<bar>bn<bar>bd<CR>
  nmap <leader>bb :buffers<cr>
  nmap <leader>bn :bn!<CR>
  nmap <leader>bp :bp!<CR>

  nmap <leader>qq :wqa!<CR>
  nmap <leader><Esc> :q!<CR>
  nmap <leader>/ :noh<CR>

  nmap <leader>ff :edit 
  nmap <leader>fs :w!<CR>
  nmap <leader>feR :source ~/.vimrc
  nmap <leader>fed :edit ~/.vimrc<CR>

  " Tab Management
  nnoremap <leader>tn :tabn<cr>
  nnoremap <leader>tp :tabp<cr>

 " Plugins
 
  " UltiSnips
  let g:UltiSnipsExpandTrigger="<C-j>"
  let g:UltiSnipsJumpForwardTrigger="<C-j>"
  let g:UltiSnipsJumpBackwardTrigger="<C-k>"

  " Ctrlp
  let g:ctrlp_working_path_mode = 'ra'
  let g:ctrlp_custom_ignore='node_modules\|dist'
