" Install packages and configuration
call plug#begin()

" Defaults
Plug 'tpope/vim-surround' " The Pope's gift to man
Plug 'tpope/vim-sensible' " Smart defaults

" UI
Plug 'jnurmine/zenburn'
Plug 'altercation/vim-colors-solarized'

" File tree
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
" Tab now opens dirs in nerdtree
autocmd FileType nerdtree map <buffer> <tab> <CR>

" Versioning
Plug 'tpope/vim-fugitive', { 'on': 'Gstatus' } " Git badassery

" Languages
Plug 'pangloss/vim-javascript', { 'for': 'javascript' } " Javascript support
Plug 'leafgarland/typescript-vim' " Typescript lang
Plug 'mxw/vim-jsx', { 'for': 'javascript.jsx' } " JSX support
Plug 'vim-ruby/vim-ruby'
Plug 'gabrielelana/vim-markdown'

Plug 'OmniSharp/omnisharp-vim'
let g:OmniSharp_server_use_mono=1
let g:OmniSharp_server_path='~/.omnisharp/omnisharp-roslyn/OmniSharp.exe'
let g:OmniSharp_port=2000

" Language Servers
Plug 'autozimu/LanguageClient-neovim', {
      \ 'branch': 'next',
      \ 'do': 'bash install.sh',
      \ }

let g:LanguageClient_serverCommands = {
\ 'ruby': ['solargraph', 'stdio'],
\ 'javascript': ['javascript-typescript-stdio'],
\ 'javascript.jsx': ['javascript-typescript-stdio'],
\ 'typescript': ['javascript-typescript-stdio'],
\ }

nnoremap <silent> gh :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> gd :call LanguageClient#textDocument_definition()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>

" Autocompletion
Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
let g:deoplete#enable_at_startup=1
" Make tab autocomplete when the pum is visible, otherwise do as normal
inoremap <expr><tab> pumvisible() ? "\<c-y>" : "\<tab>"

if !has('nvim')
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif

" Commenting
Plug 'scrooloose/nerdcommenter' " Comment lines

" Linting Engine
Plug 'w0rp/ale'

" Searching
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'junegunn/fzf.vim'

" Snippets
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
let g:UltiSnipsExpandTrigger="<C-j>"
let g:UltiSnipsJumpForwardTrigger="<C-j>"
let g:UltiSnipsJumpBackwardTrigger="<C-k>"

call plug#end()

" Settings
set nocompatible
let mapleader = " "
if has('mac')
  let g:clipboard = {'copy': {'+': 'pbcopy', '*': 'pbcopy'}, 'paste': {'+': 'pbpaste', '*': 'pbpaste'}, 'name': 'pbcopy', 'cache_enabled': 0}
endif
set clipboard+=unnamedplus
set completeopt=menu,preview,longest,noinsert
set ttyfast
set modelines=0
set history=500
set autoread
set showmatch
set splitbelow splitright
set mouse=a

if !has('nvim')
	set ttymouse=xterm2
endif

" User Interface
colorscheme solarized
set colorcolumn=120
set bg=dark
set title
set number
set lazyredraw
set showcmd
set hidden
set showmode

if has("gui_running")
  set guifont=Source\ Code\ Pro:h12
  set guioptions-=m " no menu
  set guioptions-=T " no toolbar
  set guioptions-=r " no scrollbar on the right
  set guioptions-=L " no scrollbar on the right
  set guioptions-=b " no scrollbar on the bottom
endif

highlight LineNr guibg=NONE
highlight LineNr ctermbg=NONE

" Files and Backups
set noswapfile
set backupdir=~/tmp,/tmp
set undodir=~/.vim/.tmp,~/tmp,~/.tmp,/tmp
set wildignore=.svn,CVS,.git,*.swp,*.jpg,*.png,*.gif,*.pdf,*.bak
set suffixes+=.old
set undofile

" Text Formatting
set smartcase
set expandtab
set tabstop=2
set shiftwidth=2
set softtabstop=2
set ignorecase
set hlsearch
set nowrap

" Keybindings

" General Keybindings
map <leader><leader> :Commands<CR>
imap jk <ESC>
nnoremap <backspace> <C-^>
nnoremap ` '
nnoremap ' `
imap <C-s> <C-o>:w!<CR>
imap <C-v> <ESC>"+gP
vmap <C-c> "+y

nnoremap / /\v

" Menu settings
autocmd CompleteDone * pclose

" Project management
nmap <leader>pf :FZF<CR>
nmap <leader>pp :source ~/Dropbox/sessions/
nmap <leader>ps :mksession! ~/Dropbox/sessions/
nmap <leader>pt :NERDTreeToggle<CR>

map \ :NERDTreeToggle<CR>

" Git/Fugitive keybindings
nnoremap <leader>gc :Gcommit<CR>
nnoremap <leader>gC :Git checkout
nnoremap <leader>gf :Gfetch<CR>
nnoremap <leader>gF :!git pull --rebase<CR>
nnoremap <leader>gP :Gpush
nnoremap <leader>gs :Gstatus<CR>

" Window bindings
nnoremap <leader>wh <C-w>h
nnoremap <leader>wj <C-w>j
nnoremap <leader>wk <C-w>k
nnoremap <leader>wl <C-w>l
nnoremap <leader>wo <C-w>o
nnoremap <leader>wc <C-w>c
nnoremap <leader>ws <C-w>s
nnoremap <leader>wv <C-w>v

" Buffer bindings
nmap <leader>d :bp<bar>sp<bar>bn<bar>bd<CR>
nmap <leader>bd :bd!<CR>
nmap <leader>bb :Buffers<CR>
nmap <leader>bn :bn!<CR>
nmap <leader>bp :bp!<CR>

nmap <leader>qq :wqa!<CR>
nmap <leader><Esc> :q!<CR>
nmap <leader>/ :noh<CR>

nmap <leader>ff :edit 
nmap <leader>fs :w!<CR>
nmap <leader>ft :NERDTreeFind<CR>
nmap <leader>feR :source ~/.vimrc<CR>
nmap <leader>fed :edit ~/.vimrc<CR>
nmap <leader>fo :edit ~/Dropbox/notes/gth.md<CR>

" Searching
nnoremap <Leader>sw :Rg <C-r><C-w>
nnoremap <Leader>sg :Rg<CR>
" Buffer Search
nnoremap <Leader>sb :BLines<CR>
tnoremap <Esc> <C-\><C-n>
